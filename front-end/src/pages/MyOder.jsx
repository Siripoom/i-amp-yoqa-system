import { Button, Card, Typography, message, Modal, Badge, Tag, Tooltip, Divider } from "antd";
import { useState, useEffect } from "react";
import moment from "moment";
import "../styles/Home.css";
import Footer from "../components/Footer";
import Navbar from "../components/Navbar";
import orderService from "../services/orderService";
import receiptService from "../services/receiptService";
import { Link } from "react-router-dom";
import { FilePdfOutlined, EyeOutlined, ShoppingOutlined, BookOutlined } from "@ant-design/icons";
const { Title, Text } = Typography;
import dayjs from "dayjs";

const MyOrders = () => {
  const [orders, setOrders] = useState([]); // ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Order ‡∏à‡∏£‡∏¥‡∏á
  const [loading, setLoading] = useState(true);
  const [isModalVisible, setIsModalVisible] = useState(false);
  const [selectedOrder, setSelectedOrder] = useState(null);
  const [receipts, setReceipts] = useState({}); // ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ï‡∏≤‡∏° order ID
  const [receiptLoading, setReceiptLoading] = useState({}); // loading state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à

  useEffect(() => {
    window.scrollTo(0, 0);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
    const token = localStorage.getItem("token");
    const userId = localStorage.getItem("user_id");

    if (!token || !userId) {
      message.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");
      return;
    }

    fetchOrders();
  }, []);

  const fetchOrders = async () => {
    try {
      const userId = localStorage.getItem("user_id");
      const token = localStorage.getItem("token");

      console.log('üì± Debug fetchOrders in MyOder.jsx:');
      console.log('  - User ID from localStorage:', userId);
      console.log('  - Token exists:', !!token);

      if (!userId) {
        console.log('‚ùå No user ID found');
        message.error("Please log in to view your orders.");
        return;
      }

      if (!token) {
        console.log('‚ùå No token found');
        message.error("Authentication token not found. Please log in again.");
        return;
      }

      console.log('üöÄ Calling orderService.getOrdersByUserId...');
      const response = await orderService.getOrdersByUserId(userId);

      console.log('üì¶ Response received:', response);

      if (response.status === "success" && response.data && Array.isArray(response.data)) {
        console.log('‚úÖ Setting orders from response.data:', response.data.length, 'orders');
        setOrders(response.data);
      } else if (response.data && Array.isArray(response.data)) {
        console.log('‚úÖ Setting orders from response.data (fallback):', response.data.length, 'orders');
        setOrders(response.data);
      } else {
        console.log('‚ö†Ô∏è No orders found, setting empty array');
        setOrders([]);
      }
    } catch (error) {
      console.error("‚ùå Fetch orders error:", error);

      if (error.message && error.message.includes("No orders found")) {
        setOrders([]);
        message.info("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠");
      } else if (error.message && error.message.includes("401")) {
        message.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
      } else if (error.message && error.message.includes("403")) {
        message.error("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
      } else if (error.message && error.message.includes("Access denied")) {
        message.error("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
      } else {
        message.error("Failed to load orders. Please try again.");
      }
    } finally {
      setLoading(false);
    }
  };

  // ‡πÄ‡∏õ‡∏¥‡∏î Modal ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á
  const showModal = (order) => {
    setSelectedOrder(order);
    setIsModalVisible(true);
  };

  // ‡∏õ‡∏¥‡∏î Modal
  const handleCancel = () => {
    setIsModalVisible(false);
  };

  // ‡∏î‡∏∂‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ï‡∏≤‡∏° order ID
  const fetchReceiptForOrder = async (orderId) => {
    if (receipts[orderId]) return; // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏∂‡∏á‡∏ã‡πâ‡∏≥

    setReceiptLoading(prev => ({ ...prev, [orderId]: true }));
    try {
      const response = await receiptService.getReceiptByOrderId(orderId);
      if (response.success && response.data) {
        setReceipts(prev => ({ ...prev, [orderId]: response.data }));
      }
    } catch (error) {
      console.error('Error fetching receipt for order:', error);
      // ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á error message ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö order ‡∏ô‡∏µ‡πâ
    } finally {
      setReceiptLoading(prev => ({ ...prev, [orderId]: false }));
    }
  };

  // ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à PDF
  const downloadReceiptPDF = async (receiptId, receiptNumber) => {
    try {
      const blob = await receiptService.downloadReceiptPDF(receiptId);

      const url = window.URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.download = `receipt-${receiptNumber}.pdf`;

      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      window.URL.revokeObjectURL(url);

      message.success('‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à PDF ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } catch (error) {
      console.error('Error downloading receipt PDF:', error);
      message.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÑ‡∏î‡πâ');
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô
  const getStatusTag = (status) => {
    let color = "";
    switch (status) {
      case "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥":
        color = "success";
        break;
      case "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥":
        color = "warning";
        break;
      case "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å":
        color = "error";
        break;
      default:
        color = "default";
    }
    return <Tag color={color}>{status}</Tag>;
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
  const getOrderDisplayInfo = (order) => {
    const isProduct = order.order_type === "product";
    const isGoods = order.order_type === "goods";

    if (isProduct) {
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó product (‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå)
      const { totalSessions, totalDuration, totalPrice, quantity } = calculateTotals(order);
      return {
        title: `${order.product_id?.sessions || "N/A"} Sessions`,
        icon: <BookOutlined className="text-blue-500" />,
        type: "‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå",
        details: [
          { label: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á", value: `${totalSessions} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á` },
          { label: "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤", value: `${totalDuration} ‡∏ß‡∏±‡∏ô` },
          { label: "‡∏£‡∏≤‡∏Ñ‡∏≤", value: `${totalPrice} THB` }
        ],
        quantity: quantity
      };
    } else if (isGoods) {
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó goods (‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ)
      const item = order.goods_id;
      const totalPrice = (item?.price || 0) * (order.quantity || 1);
      return {
        title: item?.goods || "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        icon: <ShoppingOutlined className="text-green-500" />,
        type: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ",
        details: [
          { label: "‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value: item?.code || "N/A" },
          { label: "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î", value: item?.detail || "N/A" },
          { label: "‡∏Ç‡∏ô‡∏≤‡∏î", value: order.size || "N/A" },
          { label: "‡∏™‡∏µ", value: order.color || "N/A" },
          { label: "‡∏£‡∏≤‡∏Ñ‡∏≤", value: `${totalPrice} THB` }
        ],
        quantity: order.quantity || 1
      };
    }

    return {
      title: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó",
      icon: <ShoppingOutlined />,
      type: "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏",
      details: [],
      quantity: 1
    };
  };

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö product ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
  const calculateTotals = (order) => {
    // ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å API ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    if (order.total_sessions && order.total_duration && order.total_price) {
      return {
        totalSessions: order.total_sessions,
        totalDuration: order.total_duration,
        totalPrice: order.total_price,
        quantity: order.quantity || 1,
      };
    }

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏≠‡∏á‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å API
    const quantity = order.quantity || 1;
    const sessionsPerUnit = order.product_id?.sessions || 0;
    const durationPerUnit = order.product_id?.duration || 0;
    const pricePerUnit = order.product_id?.price || 0;

    return {
      totalSessions: sessionsPerUnit * quantity,
      totalDuration: durationPerUnit * quantity,
      totalPrice: pricePerUnit * quantity,
      quantity,
    };
  };

  // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  const calculateRemainingDays = (date) => {
    if (!date) return { text: "Not set", daysLeft: null };

    const expiryDate = moment(date).endOf("day");
    const now = moment().startOf("day");

    if (expiryDate.isBefore(now)) {
      return { text: "Expired", daysLeft: 0, status: "error" };
    }

    const daysLeft = expiryDate.diff(now, "days");
    return {
      text: expiryDate.format("YYYY-MM-DD"),
      daysLeft,
      status: daysLeft <= 7 ? "warning" : "success",
    };
  };

  return (
    <div
      className="min-h-screen flex flex-col bg-gradient-to-b"
      style={{
        background:
          "linear-gradient(to bottom, #FEADB4 10%, #FFFFFF 56%, #B3A1DD 100%)",
      }}
    >
      <Navbar />

      <div className="flex-grow flex items-center justify-center mt-4 mb-4">
        <div className="w-full max-w-5xl flex flex-col lg:flex-row items-center lg:items-start justify-center">
          {/* Sidebar */}
          <Card className="w-full lg:w-1/4 p-6 rounded-2xl shadow-lg bg-white">
            <Title level={4} className="text-black font-semibold">
              Manage My Account
            </Title>
            <div className="mt-4 space-y-3 flex flex-col">
              <Link
                to="/profile"
                className="text-gray-400 cursor-pointer block"
              >
                My Profile
              </Link>
              <Link
                to="/my-plane"
                className="text-gray-400 cursor-pointer block"
              >
                My Plane
              </Link>
              <Link
                to="/my-orders"
                className="text-purple-600 font-semibold cursor-pointer block"
              >
                My Orders
              </Link>
            </div>
          </Card>

          {/* ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */}
          <div className="w-full lg:w-3/4 p-8 lg:ml-6 mt-6 lg:mt-0 rounded-2xl shadow-md bg-white">
            <Title level={3} className="text-purple-700">
              ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô
            </Title>

            {/* ‡πÅ‡∏™‡∏î‡∏á Loading */}
            {loading ? (
              <div className="text-center text-blue-500 font-semibold">
                Loading orders...
              </div>
            ) : orders.length > 0 ? (
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4">
                {orders.map((order) => {
                  const orderInfo = getOrderDisplayInfo(order);

                  return (
                    <Card key={order._id} className="p-4 rounded-lg shadow-md">
                      <div className="flex justify-between items-start mb-3">
                        <div className="flex items-center gap-2">
                          {orderInfo.icon}
                          <div>
                            <p className="font-bold text-gray-700">
                              {orderInfo.title}
                            </p>
                            <p className="text-sm text-gray-500">
                              {orderInfo.type}
                            </p>
                          </div>
                        </div>
                        {getStatusTag(order.status)}
                      </div>

                      <div className="mt-2 space-y-1">
                        <p>
                          <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠:</strong>{" "}
                          {moment(order.order_date).format("DD MMM YYYY")}
                        </p>

                        {orderInfo.quantity > 1 && (
                          <p>
                            <strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô:</strong> {orderInfo.quantity} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                          </p>
                        )}

                        {orderInfo.details.map((detail, index) => (
                          <p key={index}>
                            <strong>{detail.label}:</strong> {detail.value}
                          </p>
                        ))}
                      </div>

                      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏•‡∏∞‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à */}
                      <div className="mt-3 space-y-2">
                        <Button
                          className="w-full bg-pink-100 text-pink-600 hover:bg-pink-200 border-pink-300"
                          onClick={() => showModal(order)}
                        >
                          ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                        </Button>

                        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏∂‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à */}
                        <Button
                          className="w-full bg-blue-100 text-blue-600 hover:bg-blue-200 border-blue-300"
                          loading={receiptLoading[order._id]}
                          onClick={() => fetchReceiptForOrder(order._id)}
                        >
                          <EyeOutlined /> ‡∏î‡∏π‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
                        </Button>

                        {/* ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ñ‡πâ‡∏≤‡∏°‡∏µ */}
                        {receipts[order._id] && (
                          <Tooltip title="‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF">
                            <Button
                              size="small"
                              icon={<FilePdfOutlined />}
                              onClick={() => downloadReceiptPDF(receipts[order._id]._id, receipts[order._id].receiptNumber)}
                              className="w-full bg-green-100 text-green-600 hover:bg-green-200 border-green-300"
                            >
                              ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF
                            </Button>
                          </Tooltip>
                        )}
                      </div>
                    </Card>
                  );
                })}
              </div>
            ) : (
              <div className="text-center text-gray-500 py-8">
                <p className="mb-4">‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</p>
                <div className="space-x-4">
                  <Link to="/course">
                    <Button type="primary" className="bg-pink-500">
                      ‡∏ã‡∏∑‡πâ‡∏≠‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
                    </Button>
                  </Link>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */}
      <Modal
        title="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠"
        open={isModalVisible}
        onCancel={handleCancel}
        footer={[
          <Button key="close" onClick={handleCancel}>
            ‡∏õ‡∏¥‡∏î
          </Button>,
        ]}
        width={600}
      >
        {selectedOrder && (
          <div className="space-y-3">
            <div className="flex justify-between items-center">
              <p>
                <strong>Order ID:</strong> {selectedOrder._id}
              </p>
              {getStatusTag(selectedOrder.status)}
            </div>

            <div className="bg-gray-50 p-4 rounded-md">
              {selectedOrder.order_type === "product" ? (
                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö product (‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå)
                <div>
                  <h4 className="font-semibold text-blue-600 mb-3">
                    <BookOutlined /> ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
                  </h4>
                  <div className="grid grid-cols-2 gap-2">
                    <p>
                      <strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô:</strong>{" "}
                      {selectedOrder?.product_id?.sessions || "N/A"} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
                    </p>
                    <p>
                      <strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô:</strong>{" "}
                      {selectedOrder?.product_id?.price || "N/A"} THB
                    </p>
                    <p>
                      <strong>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô:</strong>{" "}
                      {selectedOrder?.product_id?.duration || "N/A"} ‡∏ß‡∏±‡∏ô
                    </p>
                    <p>
                      <strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠:</strong> {selectedOrder.quantity || 1}{" "}
                      ‡∏ä‡∏¥‡πâ‡∏ô
                    </p>
                  </div>

                  <div className="border-t border-gray-200 my-3"></div>

                  <div className="grid grid-cols-2 gap-2">
                    {(() => {
                      const { totalSessions, totalDuration, totalPrice } =
                        calculateTotals(selectedOrder);

                      return (
                        <>
                          <p>
                            <strong>‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á:</strong> {totalSessions} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
                          </p>
                          <p>
                            <strong>‡∏£‡∏ß‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤:</strong> {totalDuration} ‡∏ß‡∏±‡∏ô
                          </p>
                          <p>
                            <strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏∏‡∏ó‡∏ò‡∏¥:</strong>{" "}
                            <span className="text-red-600 font-bold">
                              {totalPrice} THB
                            </span>
                          </p>
                        </>
                      );
                    })()}
                  </div>
                </div>
              ) : selectedOrder.order_type === "goods" ? (
                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö goods (‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ)
                <div>
                  <h4 className="font-semibold text-green-600 mb-3">
                    <ShoppingOutlined /> ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                  </h4>
                  <div className="grid grid-cols-2 gap-2">
                    <p>
                      <strong>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</strong>{" "}
                      {selectedOrder?.goods_id?.goods || "N/A"}
                    </p>
                    <p>
                      <strong>‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</strong>{" "}
                      {selectedOrder?.goods_id?.code || "N/A"}
                    </p>
                    <p>
                      <strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:</strong>{" "}
                      {selectedOrder?.goods_id?.detail || "N/A"}
                    </p>
                    <p>
                      <strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô:</strong>{" "}
                      {selectedOrder?.goods_id?.price || "N/A"} THB
                    </p>
                    <p>
                      <strong>‡∏Ç‡∏ô‡∏≤‡∏î:</strong>{" "}
                      {selectedOrder.size || "N/A"}
                    </p>
                    <p>
                      <strong>‡∏™‡∏µ:</strong>{" "}
                      {selectedOrder.color || "N/A"}
                    </p>
                    <p>
                      <strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠:</strong> {selectedOrder.quantity || 1}{" "}
                      ‡∏ä‡∏¥‡πâ‡∏ô
                    </p>
                    <p>
                      <strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏∏‡∏ó‡∏ò‡∏¥:</strong>{" "}
                      <span className="text-red-600 font-bold">
                        {(selectedOrder?.goods_id?.price || 0) * (selectedOrder.quantity || 1)} THB
                      </span>
                    </p>
                  </div>

                  {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö goods */}
                  {selectedOrder.address && (
                    <div className="border-t border-gray-200 my-3 pt-3">
                      <h5 className="font-semibold mb-2">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</h5>
                      <p><strong>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> {selectedOrder.address}</p>
                      {selectedOrder.phone_number && (
                        <p><strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</strong> {selectedOrder.phone_number}</p>
                      )}
                    </div>
                  )}
                </div>
              ) : (
                <p>‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ</p>
              )}
            </div>

            <p>
              <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠:</strong>{" "}
              {moment(selectedOrder?.order_date).format("DD MMM YYYY HH:mm")}
            </p>

            {selectedOrder.approval_date && (
              <p>
                <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥:</strong>{" "}
                {moment(selectedOrder.approval_date).format(
                  "DD MMM YYYY HH:mm"
                )}
              </p>
            )}

            {selectedOrder.first_used_date && (
              <>
                <p>
                  <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:</strong>{" "}
                  {moment(selectedOrder.first_used_date).format(
                    "DD MMM YYYY HH:mm"
                  )}
                </p>

                {/* ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠ */}
                {selectedOrder.sessions_expiry_date && (
                  <p>
                    <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠:</strong>{" "}
                    {calculateRemainingDays(selectedOrder.sessions_expiry_date)}{" "}
                    ‡∏ß‡∏±‡∏ô (‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà{" "}
                    {moment(selectedOrder.sessions_expiry_date).format(
                      "DD MMM YYYY"
                    )}
                    )
                  </p>
                )}
              </>
            )}

            {selectedOrder.invoice_number && (
              <p>
                <strong>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à:</strong> {selectedOrder.invoice_number}
              </p>
            )}

            {/* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à */}
            <Divider />
            <div className="bg-blue-50 p-4 rounded-md">
              <Title level={5} className="text-blue-700 mb-3">
                ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
              </Title>

              {receipts[selectedOrder._id] ? (
                <div className="space-y-2">
                  <p><strong>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à:</strong> {receipts[selectedOrder._id].receiptNumber}</p>
                  <p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á:</strong> {moment(receipts[selectedOrder._id].createdAt).format('DD/MM/YYYY HH:mm')}</p>
                  <p><strong>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:</strong> ‡∏ø{receipts[selectedOrder._id].totalAmount?.toLocaleString()}</p>

                  <div className="mt-3">
                    <Tooltip title="‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF">
                      <Button
                        icon={<FilePdfOutlined />}
                        onClick={() => downloadReceiptPDF(receipts[selectedOrder._id]._id, receipts[selectedOrder._id].receiptNumber)}
                        className="bg-green-100 text-green-600 hover:bg-green-200 border-green-300"
                      >
                        ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î PDF
                      </Button>
                    </Tooltip>
                  </div>
                </div>
              ) : (
                <div className="text-center">
                  <p className="text-gray-500 mb-2">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ</p>
                  <Button
                    type="primary"
                    loading={receiptLoading[selectedOrder._id]}
                    onClick={() => fetchReceiptForOrder(selectedOrder._id)}
                    className="bg-blue-600"
                  >
                    <EyeOutlined /> ‡∏î‡∏π‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
                  </Button>
                </div>
              )}
            </div>

            {/* ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ñ‡πâ‡∏≤‡∏°‡∏µ */}
            {selectedOrder?.image ? (
              <div style={{ textAlign: "center", marginTop: "16px" }}>
                <p>
                  <strong>‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô:</strong>
                </p>
                <img
                  src={selectedOrder.image}
                  alt="Payment Slip"
                  style={{
                    maxWidth: "100%",
                    height: "auto",
                    borderRadius: "8px",
                    marginTop: "8px",
                    boxShadow: "0 2px 6px rgba(0,0,0,0.1)",
                  }}
                />
              </div>
            ) : (
              <p style={{ color: "gray", textAlign: "center" }}>
                No payment slip uploaded
              </p>
            )}

            {selectedOrder.status === "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" && (
              <div className="bg-green-50 p-3 rounded-md border border-green-200 mt-4">
                <Text className="text-green-700">
                  ‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß {selectedOrder.order_type === "product" ? "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ" : "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì"}
                </Text>
              </div>
            )}

            {selectedOrder.status === "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" && (
              <div className="bg-yellow-50 p-3 rounded-md border border-yellow-200 mt-4">
                <Text className="text-yellow-700">
                  ‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
                  ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà
                </Text>
              </div>
            )}
          </div>
        )}
      </Modal>

      <Footer />
    </div>
  );
};

export default MyOrders;
